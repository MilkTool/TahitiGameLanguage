The initial code generated by VC in the optimised case was...


	push	esi
	mov	esi, DWORD PTR _thread_ptr$[esp]
	push	edi
	mov	ecx, DWORD PTR [esi+28]
	add	ecx, 4
	mov	DWORD PTR [esi+28], ecx
	mov	eax, ecx
	mov	ecx, DWORD PTR [esi+16]
	fld	DWORD PTR [ecx+eax]
	lea	edi, DWORD PTR [ecx+eax]
	call	__ftol
	mov	DWORD PTR [edi], eax
	mov	eax, DWORD PTR [esi+28]
	add	eax, -4					; fffffffcH
	pop	edi
	mov	DWORD PTR [esi+28], eax
	pop	esi
	ret	0

Which is 18 instructions INCLUDING a call to a function which performs
some unknown operation. After some hand-optimisation it was reduced to...


	mov	eax, DWORD PTR [ecx+28]
	mov	ecx, DWORD PTR [ecx+16]
	mov	edx, DWORD PTR [ecx+eax]
	mov	DWORD PTR _f_Temp, edx
	fld	DWORD PTR _f_Temp
	fistp	DWORD PTR _i_Temp
	mov	edx, DWORD PTR _i_Temp
	mov	DWORD PTR [ecx+eax], edx
	ret	0


This is only 9 instructions (half as many) and there are no included
function calls!
